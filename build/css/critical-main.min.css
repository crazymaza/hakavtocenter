
html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

body {
  text-rendering: optimizeSpeed;
  display: flex;
  flex-direction: column;
  min-width: 320px;
  min-height: 100vh;
  min-height: calc(var(--vh, 1vh) * 100);
  margin: 0;
  background-color: #000;
  color: #fff;
  font-size: 100%;
  font-family: 'Montserrat', sans-serif;
  scroll-behavior: smooth;
}

.test-critical {
  width: 150px;
  height: 150px;
  border: 2px solid black;
  background-color: black;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
